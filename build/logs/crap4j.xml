<?xml version="1.0" encoding="UTF-8"?>
<crap_result>
  <project/>
  <timestamp>2015-08-06 17:55:10</timestamp>
  <stats>
    <name>Method Crap Stats</name>
    <methodCount>32</methodCount>
    <crapMethodCount>0</crapMethodCount>
    <crapLoad>0</crapLoad>
    <totalCrap>63.33</totalCrap>
    <crapMethodPercent>0</crapMethodPercent>
  </stats>
  <methods>
    <method>
      <package>DataPool</package>
      <className>DataPool</className>
      <methodName>getFullDataPool</methodName>
      <methodSignature>getFullDataPool()</methodSignature>
      <fullMethod>getFullDataPool()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool</package>
      <className>DataPool</className>
      <methodName>countRowsBy</methodName>
      <methodSignature>countRowsBy($property, $value)</methodSignature>
      <fullMethod>countRowsBy($property, $value)</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool</package>
      <className>DataPool</className>
      <methodName>getData</methodName>
      <methodSignature>getData($index)</methodSignature>
      <fullMethod>getData($index)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool</package>
      <className>DataPool</className>
      <methodName>getRowsByIndex</methodName>
      <methodSignature>getRowsByIndex($value)</methodSignature>
      <fullMethod>getRowsByIndex($value)</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool</package>
      <className>DataPool</className>
      <methodName>getRowsByIndexCumul</methodName>
      <methodSignature>getRowsByIndexCumul(&amp;$return, $key, $index)</methodSignature>
      <fullMethod>getRowsByIndexCumul(&amp;$return, $key, $index)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool</package>
      <className>DataPool</className>
      <methodName>checkArrayElements</methodName>
      <methodSignature>checkArrayElements()</methodSignature>
      <fullMethod>checkArrayElements()</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolImplements</className>
      <methodName>count</methodName>
      <methodSignature>count()</methodSignature>
      <fullMethod>count()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolImplements</className>
      <methodName>rewind</methodName>
      <methodSignature>rewind()</methodSignature>
      <fullMethod>rewind()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolImplements</className>
      <methodName>current</methodName>
      <methodSignature>current()</methodSignature>
      <fullMethod>current()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolImplements</className>
      <methodName>key</methodName>
      <methodSignature>key()</methodSignature>
      <fullMethod>key()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolImplements</className>
      <methodName>next</methodName>
      <methodSignature>next()</methodSignature>
      <fullMethod>next()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolImplements</className>
      <methodName>valid</methodName>
      <methodSignature>valid()</methodSignature>
      <fullMethod>valid()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolImplements</className>
      <methodName>offsetSet</methodName>
      <methodSignature>offsetSet($offset, $value)</methodSignature>
      <fullMethod>offsetSet($offset, $value)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolImplements</className>
      <methodName>offsetExists</methodName>
      <methodSignature>offsetExists($offset)</methodSignature>
      <fullMethod>offsetExists($offset)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolImplements</className>
      <methodName>offsetUnset</methodName>
      <methodSignature>offsetUnset($offset)</methodSignature>
      <fullMethod>offsetUnset($offset)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolImplements</className>
      <methodName>offsetGet</methodName>
      <methodSignature>offsetGet($offset)</methodSignature>
      <fullMethod>offsetGet($offset)</fullMethod>
      <crap>3.33</crap>
      <complexity>3</complexity>
      <coverage>66.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolParentImplements</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($definition = array(), $dataArray = array())</methodSignature>
      <fullMethod>__construct($definition = array(), $dataArray = array())</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolParentImplements</className>
      <methodName>levelizeArray</methodName>
      <methodSignature>levelizeArray()</methodSignature>
      <fullMethod>levelizeArray()</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolParentImplements</className>
      <methodName>hasToReturnIndexes</methodName>
      <methodSignature>hasToReturnIndexes()</methodSignature>
      <fullMethod>hasToReturnIndexes()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolParentImplements</className>
      <methodName>setReturnIndexes</methodName>
      <methodSignature>setReturnIndexes($returnIndexes = true)</methodSignature>
      <fullMethod>setReturnIndexes($returnIndexes = true)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolParentImplements</className>
      <methodName>hasToReturnArray</methodName>
      <methodSignature>hasToReturnArray()</methodSignature>
      <fullMethod>hasToReturnArray()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolParentImplements</className>
      <methodName>setReturnArray</methodName>
      <methodSignature>setReturnArray($returnArray)</methodSignature>
      <fullMethod>setReturnArray($returnArray)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolParentImplements</className>
      <methodName>getDefinition</methodName>
      <methodSignature>getDefinition()</methodSignature>
      <fullMethod>getDefinition()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolParentImplements</className>
      <methodName>getDataArray</methodName>
      <methodSignature>getDataArray()</methodSignature>
      <fullMethod>getDataArray()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolParentImplements</className>
      <methodName>checkDefinition</methodName>
      <methodSignature>checkDefinition()</methodSignature>
      <fullMethod>checkDefinition()</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolParentImplements</className>
      <methodName>checkDataArray</methodName>
      <methodSignature>checkDataArray()</methodSignature>
      <fullMethod>checkDataArray()</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolParentImplements</className>
      <methodName>setDefinition</methodName>
      <methodSignature>setDefinition($definition)</methodSignature>
      <fullMethod>setDefinition($definition)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolParentImplements</className>
      <methodName>setDataArray</methodName>
      <methodSignature>setDataArray($dataArray)</methodSignature>
      <fullMethod>setDataArray($dataArray)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolParentImplements</className>
      <methodName>getActualLine</methodName>
      <methodSignature>getActualLine()</methodSignature>
      <fullMethod>getActualLine()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolParentImplements</className>
      <methodName>composeReturn</methodName>
      <methodSignature>composeReturn($position)</methodSignature>
      <fullMethod>composeReturn($position)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolParentImplements</className>
      <methodName>getIndexPosition</methodName>
      <methodSignature>getIndexPosition($index)</methodSignature>
      <fullMethod>getIndexPosition($index)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>DataPool\implement</package>
      <className>DataPoolParentImplements</className>
      <methodName>combineReturn</methodName>
      <methodSignature>combineReturn($position)</methodSignature>
      <fullMethod>combineReturn($position)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
  </methods>
</crap_result>
